#ifndef PAT
#error "You must define PAT macro before include this file"
#endif

/* `_` */
PAT(PAT_WILD, "pat wild")
/* `123`, `Foo::Bar` */
PAT(PAT_EXPR, "pat expr")
/* `.1` only in tuple/slice */
PAT(PAT_INDEX, "pat index")
/* `.x` only in struct */
PAT(PAT_FIELD, "pat field")
/* only inside of pat
 * - slice pat: `[a, ..., b]`, `[a, r @ ...]`
 * - tuple pat: `(a, ..., b)`
 * - tuple struct pat: `Foo::(a, ..., b)`
 * 
 * repeat pattern
 * [1, 2, 3, 0...]: any [{integer}; N] with N â‰¥ 3
 * [1, 2, 3, 0...; 6]: [1, 2, 3, 0, 0, 0]
 * [1, 0..., 1]
 * [1, 0..., 1; 6]
 * [1, ..., 6]: [1, _..., 6]
 */
PAT(PAT_REPEAT, "pat repeat")
/* Point::{x, ...base} */
PAT(PAT_BASE, "pat base")
/* `foo@.x`, `*foo@...` */
PAT(PAT_BIND, "pat bind")
/* `1 | 2 | 3` */
PAT(PAT_OR, "pat or")
/* 
 * [1, ..., 2]
 * [_, _, 2]
 * [1, 2, mids @ ..., 9]
 */
PAT(PAT_SLICE, "pat slice")
/* (a, _) */
PAT(PAT_TUPLE, "pat tuple")
/*
 * Point::{x, y}
 * Point::{x@.x, y@.y}
 * Point::{x, ...base}
 * Point::{x, ...}
 * Point::{x, _...}
 * Point::{x, repeat...}
 */
PAT(PAT_STRUCT, "pat struct")
/* `foo::(_, _)` */
PAT(PAT_TUPLE_STRUCT, "pat tuple struct")
